# Modules
druid.extensions.coordinates=<%= (node[:druid][:core_extensions].map{|ext| "io.druid.extensions:druid-#{ext}:#{druid_version}"} + node[:druid][:extensions]).to_json %>

# Emitter Module
druid.emitter=logging
druid.emitter.logging.logLevel=info

# Curator Module / Discovery Module
druid.zk.service.host=<%= zookeeper_connect(node[:druid][:zookeeper][:root], node[:druid][:cluster]) %>
druid.zk.service.sessionTimeoutMs=<%= node[:druid][:zookeeper][:timeout] %>
druid.curator.compress=true
druid.discovery.curator.path=<%= node[:druid][:zookeeper][:discovery] %>

# Announcer Module / Server Inventory View Module
druid.announcer.type=batch
druid.announcer.segmentsPerNode=50
druid.announcer.maxBytesPerNode=524288

# Druid Processing Module
druid.processing.buffer.sizeBytes=<%= node[:druid][:processing][:buffer] %>
druid.processing.numThreads=<%= node[:druid][:processing][:numThreads] %>

# Storage Node Module
druid.server.priority=<%= node[:druid][:server][:priority] %>

# Segment Cache
druid.segmentCache.locations=[{"path": "/var/app/druid/storage/segment_cache", "maxSize": <%= node[:druid][:server][:max_size] %> }]
druid.segmentCache.deleteOnRemove=true
druid.segmentCache.infoDir=/var/app/druid/storage/info

# Jetty Server Module
druid.server.http.numThreads=100

# Queryable Module
druid.request.logging.type=emitter
druid.request.logging.feed=metrics

# Query Runner Factory Module
druid.query.chunkPeriod=P2M

# GroupBy Query Config
druid.query.groupBy.singleThreaded=false
druid.query.groupBy.maxIntermediateRows=1000000
druid.query.groupBy.maxResults=1000000

# Search Query Config
druid.query.search.maxSearchLimit=1000

# Database Connector Module
druid.db.connector.connectURI=jdbc:mysql://<%= mysql_master_connection(node[:druid][:cluster])[:host] %>/druid
druid.db.connector.user=<%= mysql_master_connection(node[:druid][:cluster])[:username] %>
druid.db.connector.password=<%= mysql_master_connection(node[:druid][:cluster])[:password] %>

# DataSegment Pusher/Puller Module
druid.storage.type=<%= node[:druid][:storage][:type] %>
druid.storage.storageDirectory=<%= node[:druid][:storage][:directory] %>

# S3 Deep Storage
druid.storage.bucket=<%= node[:druid][:storage][:s3][:bucket] %>
druid.storage.baseKey=<%= node[:druid][:storage][:s3][:base_key] %>
druid.s3.accessKey=<%= node[:druid][:storage][:s3][:access_key] %>
druid.s3.secretKey=<%= node[:druid][:storage][:s3][:secret_key] %>

# Indexing Services
druid.indexer.runner.type=remote
druid.indexer.storage.type=local

druid.indexer.runner.compressZnodes=true
druid.indexer.runner.javaOpts=<%= node[:druid][:indexer][:runner][:javaOpts] %>
druid.indexer.runner.startPort=<%= node[:druid][:indexer][:runner][:startPort] %>
druid.indexer.runner.taskDir=/var/app/druid/storage/task/

druid.indexer.task.taskDir=/var/app/druid/storage/task/
druid.indexer.task.chathandler.type=announce

druid.indexer.fork.property.druid.indexer.hadoopWorkingPath=/var/app/druid/storage/task_hadoop
druid.indexer.fork.property.druid.computation.buffer.size=268435456
druid.indexer.fork.property.druid.processing.numThreads=<%= node[:druid][:indexer][:workers] %>

druid.worker.capacity=<%= node[:druid][:indexer][:workers] %>
druid.worker.ip=<%= node[:ipaddress] %>

# Broker Services
druid.broker.http.numConnections=<%= node[:druid][:broker][:connections] %>
druid.broker.http.readTimeout=<%= node[:druid][:broker][:timeout] %>
druid.broker.balancer.type=<%= node[:druid][:broker][:balancer] %>
druid.broker.cache.sizeInBytes=<%= node[:druid][:broker][:cache_size_in_bytes] %>
