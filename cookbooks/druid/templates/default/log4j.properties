# log everything to stdout/stderr
log4j.rootLogger=INFO, stdout, stderr

# configure stdout appender
log4j.appender.stdout = org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Threshold = INFO
log4j.appender.stdout.Target = System.out
log4j.appender.stdout.layout = org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern = [%c] %m%n
log4j.appender.stdout.filter.filter1=org.apache.log4j.varia.LevelRangeFilter
log4j.appender.stdout.filter.filter1.levelMin=INFO
log4j.appender.stdout.filter.filter1.levelMax=INFO

# configure stderr appender
log4j.appender.stderr = org.apache.log4j.ConsoleAppender
log4j.appender.stderr.Threshold = WARN
log4j.appender.stderr.Target = System.err
log4j.appender.stderr.layout = org.apache.log4j.PatternLayout
log4j.appender.stderr.layout.ConversionPattern = [%c] %m%n

<% unless node[:druid][:log4j][:full] %>
log4j.logger.com.metamx.http.client.pool.ChannelResourceFactory=WARN
log4j.logger.io.druid.client.BatchServerInventoryView=WARN
log4j.logger.io.druid.curator.inventory.CuratorInventoryManager=WARN
log4j.logger.io.druid.guice.DruidProcessingModule$IntermediateProcessingBufferPool=WARN
log4j.logger.io.druid.segment.CompressedPools=WARN
log4j.logger.io.druid.segment.IndexIO$DefaultIndexIOHandler=WARN
log4j.logger.io.druid.segment.IndexIO=WARN
log4j.logger.io.druid.segment.IndexMerger=WARN
log4j.logger.io.druid.segment.loading.OmniSegmentLoader=WARN
log4j.logger.io.druid.segment.ReferenceCountingSegment=WARN
log4j.logger.io.druid.server.coordination.ServerManager=WARN
log4j.logger.io.druid.server.coordination.ZkCoordinator=WARN
<% end %>
