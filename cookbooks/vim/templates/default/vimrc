scriptencoding utf-8

" don't be compatible with Vi
set nocompatible

" {{{ Encodings
" http://stackoverflow.com/questions/5477565/how-to-setup-vim-properly-for-editing-in-utf-8
if has("multi_byte")
  if &termencoding == ""
    let &termencoding = &encoding
  endif
  set encoding=utf-8
  setglobal fileencoding=utf-8
endif
" }}}

<% if !root? %>
" {{{ NeoBundle
" https://github.com/Shougo/neobundle.vim#quick-start
if has('vim_starting')
  set runtimepath+=~/.vim/bundle/neobundle.vim/
endif

call neobundle#rc(expand('~/.vim/bundle/'))

" Let NeoBundle manage NeoBundle
NeoBundleFetch 'hollow/neobundle.vim'

" use vimproc to speed things up
NeoBundle 'Shougo/vimproc', {
\ 'build' : {
\     'windows' : 'make -f make_mingw32.mak',
\     'cygwin' : 'make -f make_cygwin.mak',
\     'mac' : 'make -f make_mac.mak',
\     'unix' : 'make -f make_unix.mak',
\   },
\ }
" }}}
<% end %>

" {{{ State
" use viminfo and enable large command history
set viminfo='1000,f1,:1000,/1000
set history=1000
" }}}

" {{{ Appearance
" show a narrow number column
set number
set numberwidth=3

" always show the statusbar
set laststatus=2

" highlight matching parens
set showmatch

" show tabs and trailing whitespace visually
if (&termencoding == "utf-8") || has("gui_running")
  set list listchars=tab:»·,trail:·,extends:…,nbsp:‗
else
  set list listchars=tab:>-,trail:.,extends:>,nbsp:_
endif

" ignore these suffixes
set suffixes+=.info,.aux,.log,.dvi,.bbl,.out,.o,.lo
" }}}

" {{{ Movement
" everything can be deleted by backspace
set backspace=indent,eol,start

" let arrow keys move to next line
set whichwrap+=<,>,[,]

" scrolling context
set scrolloff=6
set sidescrolloff=5
" }}}

" {{{ Search
set incsearch
set ignorecase
set smartcase
" }}}

" {{{ Editing
set shiftwidth=4
set tabstop=4
set autoindent
" }}}

" {{{ Syntax highlighting settings
" Switch syntax highlighting on, when the terminal has colors
" Also switch on highlighting the last used search pattern.
if has("syntax") && (&t_Co > 2 || has("gui_running"))
  syntax on
  set hlsearch
endif

" use bash highlighting for sh filetype by default
if has("eval")
  let is_bash=1
endif
" }}}

" {{{ Filetype plugin settings
" Enable plugin-provided filetype settings, but only if the ftplugin
" directory exists (which it won't on livecds, for example).
if has("eval") && isdirectory(expand("$VIMRUNTIME/ftplugin"))
  filetype on
  filetype plugin on
  filetype indent on
endif
" }}}

" {{{ Terminal fixes
" http://vimdoc.sourceforge.net/htmldoc/term.html#slow-fast-terminal
set ruler
set showcmd
set ttyfast
set lazyredraw

" https://bugs.gentoo.org/show_bug.cgi?id=122562
if &term ==? "gnome" && has("eval")
  exec "set <C-Left>=\eO5D"
  exec "set <C-Right>=\eO5C"
endif

" http://superuser.com/questions/401926/how-to-get-shiftarrows-and-ctrlarrows-working-in-vim-in-tmux
if &term =~ '^screen'
  execute "set <xUp>=\e[1;*A"
  execute "set <xDown>=\e[1;*B"
  execute "set <xRight>=\e[1;*C"
  execute "set <xLeft>=\e[1;*D"
endif

" https://bugs.gentoo.org/show_bug.cgi?id=101665
if "" == &shell
  if executable("/bin/bash")
    set shell=/bin/bash
  elseif executable("/bin/sh")
    set shell=/bin/sh
  endif
endif

" We know xterm-debian is a color terminal
if &term =~ "xterm-debian" || &term =~ "xterm-xfree86"
  set t_Co=16
  set t_Sf=^[[3%dm
  set t_Sb=^[[4%dm
endif
" }}}

" {{{ Modeline settings
" enable modelines only on secure vim versions
if (v:version >= 604)
  set modeline modelines=10
else
  set nomodeline
endif
" }}}

" {{{ Autocommands
augroup basic
  au!

  " turn of previous search results
  au VimEnter * nohls

  " when editing a file, always jump to the last cursor position
  autocmd BufReadPost *
        \ if ! exists("g:leave_my_cursor_position_alone") |
        \     if line("'\"") > 0 && line ("'\"") <= line("$") |
        \         exe "normal g'\"" |
        \     endif |
        \ endif

  " When editing a crontab file, set backupcopy to yes rather than auto.
  " https://bugs.gentoo.org/show_bug.cgi?id=53437
  autocmd FileType crontab set backupcopy=yes

  " set mail filetype for debians reportbug's temp files
  augroup debian
    au BufRead reportbug-*              set ft=mail
  augroup END

augroup END
" }}}

<% if !root? %>
" {{{ user vimrc
if filereadable("<%= node[:homedir] %>/.vimrc.local")
  source <%= node[:homedir] %>/.vimrc.local
endif

" check bundle
NeoBundleCheck
" }}}
<% end %>

" vim: set fenc=utf-8 tw=80 sw=2 sts=2 et :
