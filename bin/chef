#!/bin/bash

set -e

cd $(perl -e 'use Cwd "abs_path";print abs_path(shift)' $0/../../)

# install rvm & bundle
if [[ $USER != "root" ]]; then
	./scripts/bootstrap || exit 1
fi

# load configuration & run list
config_name=$1

if [[ -z ${config_name} ]]; then
	if [[ $USER == "root" ]]; then
		config_name=$(hostname -f)
	else
		config_name=$(whoami)
	fi
fi

if [[ -f config/solo/${config_name}.json ]]; then
	solo_args="-j config/solo/${config_name}.json"
else
	if [[ $USER == "root" ]]; then
		solo_args="-o role[base]"
	else
		solo_args="-o role[workstation]"
	fi
fi

echo ">>> Using configuration at config/solo/${config_name}.json"

# disable sudo password
echo ">>> Using sudo ... please enter your password if needed"
sudo sed -i -e 's/%admin.*/%admin ALL=(ALL) NOPASSWD: ALL/' /etc/sudoers

# mac sanity check
if [[ -d /Applications ]]; then
	echo ">>> Detected Mac OS X ..."

	if [[ ${config_name} == "root" ]]; then
		echo "!!! running as root is not supported on Mac OS"
		exit 1
	fi

	if [[ ! -e ~/.storerc ]]; then
		echo ">>> Please enter you App Store credentials:"
		read -p 'Apple ID: ' apple_id
		read -s -p 'Apple Password: ' apple_password
		echo "${apple_id} ${apple_password}" > ~/.storerc
		chmod 0400 ~/.storerc
	fi

	# select the correct xcode version
	sudo "xcode-select" -switch /Applications/Xcode.app/Contents/Developer || exit 1
fi

if [[ -e /etc/debian_version ]]; then
	sudo apt-get install -y curl whois || exit 1
fi

# install chef if it is missing
if ! type -P chef-solo >/dev/null; then
	echo ">>> Trying to install Chef"
	if [[ -f /etc/gentoo-release ]]; then
		sudo emerge app-admin/chef || exit 1
	else
		curl -L https://www.opscode.com/chef/install.sh | sudo bash || exit 1
	fi
fi

if [[ -e ~/.rvm/scripts/rvm ]]; then
	source ~/.rvm/scripts/rvm
fi

echo ">>> Running chef-solo ..."
chef-solo -c .chef/solo.rb ${solo_args} || exit 1

if [[ -d /Applications ]]; then
	echo ">>> Switching shell to homebrew bash"
	current_shell=$(dscl . -read /Users/${config_name} | grep '^UserShell:' | awk '{print $2}')
	new_shell="/usr/local/bin/bash"

	if [[ -x ${new_shell} && ${current_shell} != ${new_shell} ]]; then
		sudo chsh -s ${new_shell} ${config_name}
	fi

	echo ">>> Importing iTerm color schemes. Please accept any dialog boxes"
	if [[ ! -e "/Applications/iTerm.app/Solarized Dark.itermcolors" ]]; then
		curl -s -L https://raw.github.com/altercation/solarized/master/iterm2-colors-solarized/Solarized%20Dark.itermcolors > '/Applications/iTerm.app/Solarized Dark.itermcolors'
		open '/Applications/iTerm.app/Solarized Dark.itermcolors'
	fi

	if [[ ! -e "/Applications/iTerm.app/Solarized Light.itermcolors" ]]; then
		curl -s -L https://raw.github.com/altercation/solarized/master/iterm2-colors-solarized/Solarized%20Light.itermcolors > '/Applications/iTerm.app/Solarized Light.itermcolors'
		open '/Applications/iTerm.app/Solarized Light.itermcolors'
	fi
fi

# enable sudo password
sudo sed -i -e 's/%admin.*/%admin ALL=(ALL) ALL/' /etc/sudoers

echo ">>> All done. Happy hacking!"
